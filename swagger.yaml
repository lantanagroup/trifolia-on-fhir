swagger: "2.0"
info:
  description: >
    <h2>Authentication</h2>
    This server uses auth0.com for authentication.

    <h2>Web Sockets</h2>
    This server uses [socket.io](https://socket.io/) to communicate in real-time between the client and the server when performing lengthy requests, such as in the export process.

    Each interaction is a type of "message" sent to the client from the server. The message is a JSON object that has the following properties:

    **packageId**: The id of the package in which the status message is intended for; in case the same client has requested multiple exports simultaneously - which is not advised.

    **status**: The status of the export (ex: "progress", "error", "complete")

    **message**: A message associated with the status that should be displayed to the user or logged
  version: "1.0.0"
  title: "Trfiolia-on-FHIR"
  contact:
    email: "sean.mcilvenna@lantanagroup.com"
externalDocs:
  description: "The latest FHIR documentation is located here"
  url: "http://build.fhir.org"
host: "##host##"
basePath: "/api"
schemes:
  - "##scheme##"

securityDefinitions:
  auth0:
    type: oauth2
    flow: authorizationCode
    authorizationUrl: https://trifolia.auth0.com/authorize
    tokenUrl: https://trifolia.auth0.com/oauth/token
    scopes: {}

parameters:
  fhirserver:
    name: "fhirserver"
    in: header
    description: "The ID of the configured FHIR server to use for the request. Defaults to the first server in the list of fhir servers as returned by the /config endpoint."
    required: false
    schema:
      type: string

components:
  responses:
    Unauthorized:
      description: The request is not authorized

##swagger-definitions.yaml##

paths:
  /config:
    get:
      summary: "Gets configuration information for this installation of the Trifolia-on-FHIR server. This includes a list of the FHIR servers that be used with the 'fhirserver' header."
      tags:
        - Config
      responses:
        200:
          application/json:
  /config/fhir:
    get:
      summary: "Gets the /metadata fhirResources for the FHIR server specified by the 'fhirserver' header."
      tags:
        - Config
      responses:
        200:
          application/json:
  /export/{implementationGuideId}:
    post:
      summary: requests that a new export be produced
      security:
        - auth0: []
      tags:
        - Export
      parameters:
        - $ref: '#/parameters/fhirserver'
        - name: implementationGuideId
          in: path
          description: ImplementationGuide.id
          required: true
          schema:
            type: string
        - name: exportFormat
          in: query
          description: "The type of export to produce (ex: bundle vs. ig publisher). 1 = bundle, 2 = ig publisher"
          required: true
          schema:
            type: number
        - name: _format
          in: query
          description: "The format that the resource(s) in the export. Can be either 'application/xml' or 'application/json'. Defaults to 'application/json'."
          schema:
            type: string
            example: application/json
        - name: executeIgPublisher
          in: query
          description: "*Only applies to ig publisher package exports (exportFormat = 2)*. Indicates whether to execute the IG publisher against the prepared package prior."
          schema:
            type: boolean
        - name: useTerminologyServer
          in: query
          description: "*Only applies to ig publisher package exports (exportFormat = 2)*. Indicates whether to use the terminology server when executing the ig publisher."
          schema:
            type: boolean
        - name: downloadOutput
          in: query
          description: "*Only applies to ig publisher package exports (exportFormat = 2)*. Indicates that you want to download the package after it is prepared. This ensures that the output is saved until the GET /export method is called for the package. Otherwise, the output/content is immediately published to the /igs location within ToF and the temporary files used to perform the export are immediately deleted."
          schema:
            type: boolean
        - name: useLatest
          in: query
          description: "*Only applies to ig publisher package exports (exportFormat = 2)*. Indicates that the export should be executed using the latest version of the IG publisher from build.fhir.org."
          schema:
            type: boolean
      responses:
        '200-a':
          description: When the request is to produce a bundle, the response content is a file download of the .xml or .json bundle
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
          headers:
            Content-Disposition:
              schema:
                type: string
              description: attachment; filename=ig-bundle.XXX
        '200-b':
          description: When the request is to produce an IG Publisher package, the response is a package id that can be used with a sockets connection to the server. The sockets connection reports the status of the export as it is being prepared, and reports the status using the package id in this response.
          content:
            application/json:
              schema:
                type: string
  /export/{packageId}:
    get:
      summary: "Retrieves an export package requested using the packageId returned by the POST operation."
      tags:
        - Export
      security:
        - auth0: []
      parameters:
        - $ref: '#/parameters/fhirserver'
        - name: packageId
          in: path
          required: true
          description: "The ID of the package. This ID is provided by the POST response."
      responses:
        '200':
          description: "If the package has been successfully produced by the POST export request, this response is a file download representing the prepared ig publisher package (in the form of a zip file)"
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
          headers:
            Content-Disposition:
              schema:
                type: string
              description: attachment; filename=ig-bundle.zip
  /import:
    post:
      tags:
        - Import
      security:
        - auth0: []
      parameters:
        - $ref: '#/parameters/fhirserver'
  /import/phinVads:
    get:
      summary: "TODO: Not yet implemented"
      tags:
        - Import
      security:
        - auth0: []
      parameters:
        - $ref: '#/parameters/fhirserver'
        - name: queryText
          description: "Text that should be use to search phin vads for a value set"
          in: query
          schema:
            type: string
    post:
      summary: "TODO: Not yet implemented"
      tags:
        - Import
      security:
        - auth0: []
      parameters:
        - $ref: '#/parameters/fhirserver'
  /import/excelValueSet:
    post:
      tags:
        - Import
      security:
        - auth0: []
      parameters:
        - $ref: '#/parameters/fhirserver'
  /import/vsac/{resourceType}/{id}:
    get:
      tags:
        - Import
      security:
        - auth0: []
      parameters:
        - $ref: '#/parameters/fhirserver'
        - name: vsacauthorization
          description: "The authorization header to use when making a VSAC request"
          in: header
          schema:
            type: string
        - name: id
          description: "The OID of the value set to import from vsac"
          in: path
          schema:
            type: string
        - name: resourceType
          description: "The type of resource to get from VSAC's FHIR API"
          in: path
          schema:
            type: string
        - name: id
          description: "The id of the resource to import from VSAC's FHIR API"
          in: path
          schema:
            type: string
  /fhir:
    get:
      summary: "Proxy to underlying FHIR server. All query parameters, path, etc. are redirected to FHIR server specified by the 'fhirserver' header."
      tags:
        - FHIR Proxy
      security:
        - auth0: []
      parameters:
        - $ref: '#/parameters/fhirserver'
  /fhir/{resourceType}/{id}/$change-id:
    post:
      summary: 'A custom operation to change the id of a resource on the FHIR server'
      tags:
        - Custom FHIR Operations
      security:
        - auth0: []
      parameters:
        - $ref: '#/parameters/fhirserver'
        - name: resourceType
          description: 'The type of the FHIR resource'
          in: path
          schema:
            type: string
            example: DiagnosticReport
        - name: id
          description: 'The current ID of the resource that is going to be changed'
          in: path
        - name: newId
          description: 'The new ID of the resource'
          in: query

#
# AUDIT EVENT
#

  /auditEvent:
    get:
      summary: "Retrieves all audit events from the FHIR server"
      tags:
        - Audit
      security:
        - auth0: []
      parameters:
        - $ref: '#/parameters/fhirserver'
      responses:
        '200':
          description: "Success"
          type: array
          items:
            $ref: '#/definitions/AuditEvent'
        '401':
          $ref: '#/components/responses/Unauthorized'
    post:
      summary: "Creates a new audit event"
      tags:
        - Audit
      security:
        - auth0: []
      parameters:
        - $ref: '#/parameters/fhirserver'
      responses:
        '200':
          description: "Success"
        '401':
          $ref: '#/components/responses/Unauthorized'
  /auditEvent/{id}:
    get:
      summary: "Retrieves the details of a particular audit event"
      tags:
        - Audit
      security:
        - auth0: []
      parameters:
        - $ref: '#/parameters/fhirserver'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: "Success"
          schema:
            $ref: '#/definitions/AuditEvent'
        '401':
          $ref: '#/components/responses/Unauthorized'

#
# BINARY
#

  /binary:
    get:
      summary: "Retrieves Binary resources from the FHIR server. Supports any query parameters supported by the FHIR server. See http://build.fhir.org/binary.html#search for possible query parameters."
      descriptions:
      tags:
        - Binary
      security:
        - auth0: []
      responses:
        '200':
          description: "Success"
          type: array
          items:
            $ref: '#/definitions/Binary'
        '401':
          $ref: '#/components/responses/Unauthorized'
      parameters:
        - $ref: '#/parameters/fhirserver'
    post:
      summary: "Creates a new Binary resource on the FHIR server"
      tags:
        - Binary
      security:
        - auth0: []
      parameters:
        - $ref: '#/parameters/fhirserver'
        - in: body
          required: true
          schema:
            $ref: '#/definitions/Binary'
      responses:
        '200':
          description: "Success. Binary resource is returned with the generated ID."
          schema:
            $ref: '#/definitions/Binary'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /binary/{id}:
    get:
      summary: "Retrieves a specific Binary resource by ID from the FHIR server"
      tags:
        - Binary
      security:
        - auth0: []
      parameters:
        - $ref: '#/parameters/fhirserver'
        - in: path
          name: id
          required: true
          description: "The ID of the resource to retrieve"
          type: string
      responses:
        '200':
          description: "Success"
          schema:
            $ref: '#/definitions/Binary'
        '401':
          $ref: '#/components/responses/Unauthorized'
    put:
      summary: "Updates a specific Binary resource or creates a Binary resource with a specific ID if it does not already exist (assuming the underlying FHIR server supports it)"
      tags:
        - Binary
      security:
        - auth0: []
      parameters:
        - $ref: '#/parameters/fhirserver'
        - in: path
          name: id
          required: true
          description: "The ID of the resource to update or create"
          type: string
        - in: body
          description: "The Binary resource to create/update the server with"
          required: true
          schema:
            $ref: '#/definitions/Binary'
      responses:
        '200':
          description: "Success. The Binary resource was updated."
          schema:
            $ref: '#/definitions/Binary'
        '401':
          $ref: '#/components/responses/Unauthorized'
    delete:
      summary: "Deletes a specific Binary resource by ID from the FHIR server"
      tags:
        - Binary
      security:
        - auth0: []
      parameters:
        - in: path
          name: id
          required: true
          description: "The ID of the resource to delete"
          type: string
      responses:
        '200':
          description: 'Success. Binary resource was deleted.'
        '401':
          $ref: '#/components/responses/Unauthorized'
